
#Область Доработать
//Сделать внешней обработкой, через Печать вызывать модуль формы с названием "Получить программный код элементов формы". Форму брать через "ВладелецФормы.". 
//При выходе выводить все элемены формы в СписокЗначений, с отметкой тех, код которых надо вывести.
//Код результата выводить в окне ВвестиСтроку().
//Программное создание таблиц с реквизитами. В код прописывать свойства тех, значения которых отличны от типовых (сравнивая свойства нового созданного с рассматриваемым элементом).
#КонецОбласти // Доработать 

#Область АвтономнаяКоманда

//+++ ====== Выполнить автономную команду (можно добавить при создании любой другой формы) ================================================

//Добавить кнопку автономной программной генерации кода реквизитов и элементов в командную панель
//ИмяКоманды 				= "ПрограммныйКодОткрытойФормы";
//КомандаФормы 			= ЭтаФорма.Команды.Добавить(ИмяКоманды);
//КомандаФормы.Действие 	= "ВыполнитьАвтономнуюКоманду";
//КомандаФормы.Заголовок 	= "Программный код открытой формы";
//КомандаФормы.Отображение 	= ОтображениеКнопки.КартинкаИТекст;
//КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;

//НовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ПрограммныйКодОткрытойФормы", Тип("КнопкаФормы"), КоманднаяПанель);
//НовыйЭлемент.ИмяКоманды = ИмяКоманды;

&НаКлиенте
Процедура ВыполнитьАвтономнуюКоманду(Команда)
	
	ВыполнитьКоманду("ПрограммныйКодОткрытойФормы_ПриСозданииНаСервере");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив = Неопределено) Экспорт
	
	Если ИдентификаторКоманды = "ПрограммныйКодОткрытойФормы" Тогда //Открывая из внешней обработки через "Заполнить" - пока не работает
		ЗаполнитьСписокЭлементовЗатемПолучитьКод(ВладелецФормы, Ложь); //Но ВладелецФормы с Сервере не берётся и на него не передаётся - печалька
	ИначеЕсли ИдентификаторКоманды = "ПрограммныйКодОткрытойФормы_ПриСозданииНаСервере" Тогда //Это вызываем в нужной чужой форме, чтобы получит код своего элемента
		//ВыполнитьКоманду("ПрограммныйКодОткрытойФормы_ПриСозданииНаСервере"); //Вызовем автономную программную генерацию реквизитов и элементов формы
		ЗаполнитьСписокЭлементовЗатемПолучитьКод(ЭтаФорма)
	КонецЕсли; 
	
КонецПроцедуры // ВыполнитьКоманду()

&НаКлиенте
Функция ЗаполнитьСписокЭлементовЗатемПолучитьКод(пФорма, пЭтаФорма = Истина, пНастройкиИзРеквизитовФормы = Ложь)
	
	лРезультат = Неопределено;
	
	Если пФорма <> Неопределено Тогда
		Если ТипЗнч(пФорма) = Тип("УправляемаяФорма") Тогда
			//Заполним СписокЗначений элементами
			лСписокЗначенийЭлементов 	= Новый СписокЗначений;
			лЭлементыФормы 				= пФорма.Элементы;
			
			Для каждого лЭлемент Из лЭлементыФормы Цикл
				
				лЭлементИмя 	= лЭлемент.Имя;
				лЭлементТип 	= Строка(лЭлемент); 
				//лЭлементЗаголовок 	= лЭлемент.Заголовок;
				лСписокЗначенийЭлементов.Добавить(лЭлементИмя, лЭлементТип + " (" + лЭлементИмя + ")");
				
			КонецЦикла; 
			
			Если лСписокЗначенийЭлементов.ОтметитьЭлементы("Отметьте элементы для генерации их программного кода") Тогда
				
				лНастройкиПараметры = ПолучитьСтруктуруНастроекПараметров();
				
				Если НЕ пНастройкиИзРеквизитовФормы Тогда 
					//лНастройкиПараметры.УчитыватьТолькоТестЗаголовка 	= УчитыватьТолькоТестЗаголовка;
					//лНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка 	= ЗатиратьЗаданныйТекстЗаголовка;
					//лНастройкиПараметры.ПрефиксИмёнРеквизитов 	= ПрефиксИмёнРеквизитов;
					//лНастройкиПараметры.ПостфиксИмёнРеквизитов 	= ПостфиксИмёнРеквизитов;
					//лНастройкиПараметры.ПрефиксИмёнЭлементов 	= ПрефиксИмёнЭлементов;
					//лНастройкиПараметры.ПостфиксИмёнЭлементов 	= ПостфиксИмёнЭлементов;
				Иначе //Берём из реквизитов конкретно этой формы. Если запускаем автономно, то удаляем код, или комментим, или создаём реквизиты
					лНастройкиПараметры.УчитыватьТолькоТестЗаголовка 	= УчитыватьТолькоТестЗаголовка;
					лНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка 	= ЗатиратьЗаданныйТекстЗаголовка;
					лНастройкиПараметры.ПрефиксИмёнРеквизитов 	= ПрефиксИмёнРеквизитов;
					лНастройкиПараметры.ПостфиксИмёнРеквизитов 	= ПостфиксИмёнРеквизитов;
					лНастройкиПараметры.ПрефиксИмёнЭлементов 	= ПрефиксИмёнЭлементов;
					лНастройкиПараметры.ПостфиксИмёнЭлементов 	= ПостфиксИмёнЭлементов;
				КонецЕсли;
				
				лСгенерированныйКод = СозатьПрограммноФормуОтмеченныхЭлементов(лСписокЗначенийЭлементов, пЭтаФорма, лНастройкиПараметры);
				
				Подсказка = "Сгенерированный программный код для отмеченных элементов";
				Если ВвестиСтроку(лСгенерированныйКод, Подсказка, 0, Истина) Тогда
					
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли; 
	КонецЕсли;
	
	Возврат лРезультат;
	
КонецФункции // ЗаполнитьСписокЭлементовЗатемПолучитьКод()

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтруктуруНастроекПараметров()
	
	лНастройкиПараметры = Новый Структура();
	
	лНастройкиПараметры.Вставить("УчитыватьТолькоТестЗаголовка"		, "");
	лНастройкиПараметры.Вставить("ЗатиратьЗаданныйТекстЗаголовка"	, Ложь);
	лНастройкиПараметры.Вставить("ПрефиксИмёнРеквизитов"			, "");
	лНастройкиПараметры.Вставить("ПостфиксИмёнРеквизитов"			, "");
	лНастройкиПараметры.Вставить("ПрефиксИмёнЭлементов"				, "");
	лНастройкиПараметры.Вставить("ПостфиксИмёнЭлементов"			, "");
	
	Возврат лНастройкиПараметры;
	
КонецФункции // ПолучитьСтруктуруНастроекПараметров()

&НаСервере
Функция СозатьПрограммноФормуОтмеченныхЭлементов(пСписокЗначенийЭлементов, пЭтаФорма = Истина, пНастройкиПараметры = Неопределено)
	
	лРезультат 			= Неопределено;
	СгенерированныйКод 	= "";
	лСгенерированныйКод = ""; //Служебный, который будем тоскать как тест
	
	Если пЭтаФорма Тогда
		лЭлементыФормы = ЭтаФорма.Элементы;
	Иначе
		лЭлементыФормы = ВладелецФормы.Элементы;
	КонецЕсли; 
	
	//лЭлементыГруппаРисованияПодчиненныеЭлементы 	= Элементы.ГруппаРисования.ПодчиненныеЭлементы;
	Для каждого лЭлемент Из лЭлементыФормы Цикл
		
		лЭлементИмя 		= лЭлемент.Имя;
		лЭлементЗаголовок 	= лЭлемент.Заголовок;
		
		лНайденныйЭлементИзСписка = пСписокЗначенийЭлементов.НайтиПоЗначению(лЭлементИмя);
		Если лНайденныйЭлементИзСписка <> Неопределено Тогда
			Если лНайденныйЭлементИзСписка.Пометка Тогда
				лСгенерированныйКод = лСгенерированныйКод + ПроверкаТипаПрограммногоСоздания(лЭлемент, пНастройкиПараметры);
			КонецЕсли;	
		КонецЕсли; 
		
	КонецЦикла;
	
	лРезультат = лСгенерированныйКод;
	Возврат лРезультат;
	
КонецФункции // СозатьПрограммноФорму()

&НаСервере
Функция ПроверкаТипаПрограммногоСоздания(пЭлемент, пНастройкиПараметры)
	
	лРезультат = "";
	
	Если ТипЗнч(пЭлемент) = Тип("КнопкаФормы") Тогда
		лРезультат = лРезультат + СоздатьПрограммноКнопку(пЭлемент, пНастройкиПараметры); 
	ИначеЕсли ТипЗнч(пЭлемент) = Тип("ПолеФормы") Тогда
		лРезультат = лРезультат + СоздатьПолеФормы(пЭлемент, пНастройкиПараметры);
	ИначеЕсли ТипЗнч(пЭлемент) = Тип("ГруппаФормы") Тогда //Группы проходим рекурсивно
		лРезультат = лРезультат + СоздатьПрограммноГруппу(пЭлемент, пНастройкиПараметры);
	ИначеЕсли ТипЗнч(пЭлемент) = Тип("ТаблицаФормы") Тогда
		
	ИначеЕсли ТипЗнч(пЭлемент) = Тип("ДекорацияФормы") Тогда	
		лРезультат = лРезультат + СоздатьПрограммноДекорацию(пЭлемент, пНастройкиПараметры);
	Иначе
		лРезультат = лРезультат + СоздатьПрочийЭлемент(пЭлемент, пНастройкиПараметры);
	КонецЕсли;
	
	Возврат лРезультат;
	
КонецФункции // ПроверкаТипаПрограммногоСоздания()

&НаСервере
Функция СоздатьПрограммноДекорацию(пДекорация, пНастройкиПараметры)
	
	лРезультат 			= "";
	лСгенерированныйКод = "";
	
	Если пДекорация <> Неопределено Тогда
		лДекорацияИмя 			= пДекорация.Имя;
		лДекорацияЗаголовок 	= пДекорация.Заголовок;
		
		лКовычка = """";
		
		лПрограммныйКодИмяЭлемента 	= лКовычка + пНастройкиПараметры.ПрефиксИмёнЭлементов + лДекорацияИмя + пНастройкиПараметры.ПостфиксИмёнЭлементов + лКовычка;
		
		лПрограммныйКод = "
		|//Декорация " + лПрограммныйКодИмяЭлемента + "
		|лДекорация			= ЭтаФорма.Элементы.Добавить(" + лПрограммныйКодИмяЭлемента + ", Тип(" + лКовычка + "ДекорацияФормы" + лКовычка + "), " + "Элементы." + пДекорация.Родитель.Имя + ");
		|лДекорация.Вид		= ВидДекорацииФормы." + ПолучитьИмяСвойства(Строка(пДекорация.Вид)) + ";
		|лДекорация.Заголовок	= " + лКовычка + ?(пНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка, СтрЗаменить(лДекорацияЗаголовок, пНастройкиПараметры.УчитыватьТолькоТестЗаголовка, ""), лДекорацияЗаголовок) + лКовычка + ";";
		
		лПрограммныйКод = лПрограммныйКод + "
		|";
		
		СгенерированныйКод 	= Строка(СгенерированныйКод) + лПрограммныйКод;
		лСгенерированныйКод = лСгенерированныйКод + лПрограммныйКод;
	КонецЕсли;
	
	лРезультат = лРезультат + лСгенерированныйКод;
	Возврат лРезультат;
	
КонецФункции

&НаСервере
Функция СоздатьПолеФормы(пЭлемент, пНастройкиПараметры)
	
	лРезультат 			= "";
	лСгенерированныйКод = "";
	
	Если пЭлемент <> Неопределено Тогда
		//Элемент
		лЭлементИмя 		= пЭлемент.Имя;
		лЭлементЗаголовок 	= пЭлемент.Заголовок;
		
		лКовычка 		= """"; 
		
		лПутьКДанным 	= пЭлемент.ПутьКДанным;
		
		лРеквизитыФормы = ПолучитьРеквизиты();
		
		лЕстьРеквизит 	= Ложь;
		
		Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
			
			лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
			
			Если лРеквизитФормыЭлемИмя = лПутьКДанным Тогда
				лЕстьРеквизит 					= Истина;
				лРеквизитФормыЭлемЗаголовок 	= лРеквизитыФормыЭлем.Заголовок;
				лРеквизитФормыЭлемТип 			= лРеквизитыФормыЭлем.ТипЗначения;
				лРеквизитФормыЭлемПуть 			= лРеквизитыФормыЭлем.Путь;
				
				Прервать;
			КонецЕсли; 
			
		КонецЦикла;
		
		Если лЕстьРеквизит Тогда //лРеквизитыФормы.Найти(лПутьКДанным) <> Неопределено
			лПрограммныйКодИмяРеквизита = лКовычка + пНастройкиПараметры.ПрефиксИмёнРеквизитов + лПутьКДанным + пНастройкиПараметры.ПостфиксИмёнРеквизитов + лКовычка;
			лПрограммныйКодИмяЭлемента 	= лКовычка + пНастройкиПараметры.ПрефиксИмёнЭлементов + лЭлементИмя + пНастройкиПараметры.ПостфиксИмёнЭлементов + лКовычка;
			
			лПрограммныйКодЗаголовокРеквизита = лКовычка + ?(пНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка, СтрЗаменить(лРеквизитФормыЭлемЗаголовок, пНастройкиПараметры.УчитыватьТолькоТестЗаголовка, ""), лРеквизитФормыЭлемЗаголовок) + лКовычка;
			лПрограммныйКодЗаголовокЭлемента = лКовычка + ?(пНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка, СтрЗаменить(лЭлементЗаголовок, пНастройкиПараметры.УчитыватьТолькоТестЗаголовка, ""), лЭлементЗаголовок) + лКовычка;
			
			лПрограммныйКод = "
			|//Реквизит " + лПрограммныйКодИмяРеквизита + " и ПолеФормы " + лПрограммныйКодИмяЭлемента + "
			|//Ищем реквизит " + лПрограммныйКодИмяРеквизита + ". Если не находим - добавляем новый, иначе берём существующий
			|лРеквизитыФормы 	= ПолучитьРеквизиты();
			|лИмяРеквизита 		= " + лПрограммныйКодИмяРеквизита + ";
			|лЕстьРеквизит 		= Ложь;
			|Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
			|	
			|	лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
			|	Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			|		лЕстьРеквизит 	= Истина;
			|		Прервать;
			|	КонецЕсли; 
			|	
			|КонецЦикла;
			|
			|Если НЕ лЕстьРеквизит Тогда
			|	МассивРеквизитовФормы 	= Новый Массив;
			|	НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов(" + лКовычка + Строка(лРеквизитФормыЭлемТип) + лКовычка + "), " + лКовычка + лРеквизитФормыЭлемПуть + лКовычка + ", " + лПрограммныйКодЗаголовокРеквизита + ");
			|	МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
			|	
			|	ИзменитьРеквизиты(МассивРеквизитовФормы);	
			|КонецЕсли; 
			|
			|лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить(" + лПрограммныйКодИмяЭлемента + ", Тип("+ лКовычка + "ПолеФормы" + лКовычка + "), " + "Элементы." + пЭлемент.Родитель.Имя + ");
			|лНовыйЭлемент.Вид 		= ВидПоляФормы." + ПолучитьИмяСвойства(Строка(пЭлемент.Вид)) + ";
			|лНовыйЭлемент.Заголовок	= " + лПрограммныйКодЗаголовокЭлемента + ";
			|лНовыйЭлемент.ПутьКДанным 	= " + ?(ЗначениеЗаполнено(лРеквизитФормыЭлемПуть), лКовычка + лРеквизитФормыЭлемПуть + "." + лКовычка + " + лИмяРеквизита", "лИмяРеквизита") + ";
			|лНовыйЭлемент.УстановитьДействие(""ПриИзменении""," + лКовычка + пНастройкиПараметры.ПрефиксИмёнЭлементов + лЭлементИмя + пНастройкиПараметры.ПостфиксИмёнЭлементов + "ПриИзменении" + лКовычка + ");
			|";
			
			//НовыйЭлемент.КнопкаОчистки 	= Истина;
			//НовыйЭлемент.УстановитьДействие("ПриИзменении","КЛ_ПриИзмененииСтатусаОбработки");
			
			СгенерированныйКод 	= Строка(СгенерированныйКод) + лПрограммныйКод;
			лСгенерированныйКод = лСгенерированныйКод + лПрограммныйКод;
		КонецЕсли;  
		
	КонецЕсли;
	
	лРезультат = лСгенерированныйКод;
	Возврат лРезультат;
	
КонецФункции // СоздатьПрочийЭлемент()

&НаСервере
Функция СоздатьПрочийЭлемент(пЭлемент, пНастройкиПараметры)
	
	лРезультат = "";
	
	лРезультат = лРезультат + СоздатьПолеФормы(пЭлемент, пНастройкиПараметры);
	
	Возврат лРезультат;
	
КонецФункции // СоздатьПрочийЭлемент()

&НаСервере
Функция СоздатьПрограммноГруппу(лЭлемент, пНастройкиПараметры)
	
	лРезультат = "";
	
	лРезультат = лРезультат + ОбойтиГруппы(лЭлемент, , пНастройкиПараметры);
	
	Возврат лРезультат;
	
КонецФункции // СоздатьПрограммноГруппу()

&НаСервере
Функция ОбойтиГруппы(пГруппа, пАргументПроцедуры = Неопределено, пНастройкиПараметры)
	
	лРезультат 			= "";
	лСгенерированныйКод = "";
	
	Если пГруппа <> Неопределено Тогда
		лГруппаИмя 			= пГруппа.Имя;
		лГруппаЗаголовок 	= пГруппа.Заголовок;
		
		лКовычка = """";
		
		лПрограммныйКодИмяЭлемента 	= лКовычка + пНастройкиПараметры.ПрефиксИмёнЭлементов + лГруппаИмя + пНастройкиПараметры.ПостфиксИмёнЭлементов + лКовычка;
		
		лГруппаВид 	= пГруппа.Вид; 
		
		Если лГруппаВид = ВидГруппыФормы.Страницы Тогда
			лПрограммныйКодШапкаКомментария = "
			|////////////////////////////////////////////////////////////////////////////////
			|//Страницы " + лПрограммныйКодИмяЭлемента;
		ИначеЕсли лГруппаВид = ВидГруппыФормы.Страница Тогда
			лПрограммныйКодШапкаКомментария = "
			|//Страница " + лПрограммныйКодИмяЭлемента;	
		ИначеЕсли лГруппаВид = ВидГруппыФормы.ОбычнаяГруппа Тогда
			лПрограммныйКодШапкаКомментария = "
			|//Группа " + лПрограммныйКодИмяЭлемента;
		ИначеЕсли лГруппаВид = ВидГруппыФормы.КоманднаяПанель Тогда
			лПрограммныйКодШапкаКомментария = "
			|//Командная панель " + лПрограммныйКодИмяЭлемента;
		КонецЕсли;
		
		Если НЕ ТипЗнч(пГруппа.Родитель) = Тип("УправляемаяФорма") Тогда //Т.к. там не Имя, а ИмяФормы
			лГруппаРодительИмя 					= пГруппа.Родитель.Имя;
			лПрограммныйКодГруппаРодительИмя 	= ?(ЗначениеЗаполнено(лГруппаРодительИмя), "Элементы." + лГруппаРодительИмя, "");
		КонецЕсли;  
		
		лПрограммныйКод = лПрограммныйКодШапкаКомментария + "
		|лГруппа			= ЭтаФорма.Элементы.Добавить(" + лПрограммныйКодИмяЭлемента + ", Тип(" + лКовычка + "ГруппаФормы" + лКовычка + "), " + лПрограммныйКодГруппаРодительИмя + ");
		|лГруппа.Вид		= ВидГруппыФормы." + ПолучитьИмяСвойства(Строка(лГруппаВид)) + ";
		|лГруппа.Заголовок	= " + лКовычка + ?(пНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка, СтрЗаменить(лГруппаЗаголовок, пНастройкиПараметры.УчитыватьТолькоТестЗаголовка, ""), лГруппаЗаголовок) + лКовычка + ";";
		
		Если пГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа Тогда //Для Страницы нет "ОтображатьЗаголовок" 
			лПрограммныйКод = лПрограммныйКод + "
			|лГруппа.ОтображатьЗаголовок 	= " + Формат(пГруппа.ОтображатьЗаголовок, "БЛ=Ложь; БИ=Истина") + ";";
		КонецЕсли;
		
		лПрограммныйКод = лПрограммныйКод + "
		|";
		
		СгенерированныйКод 	= Строка(СгенерированныйКод) + лПрограммныйКод;
		лСгенерированныйКод = лСгенерированныйКод + лПрограммныйКод;
	КонецЕсли;
	
	лРезультат = лРезультат + лСгенерированныйКод;
	
	Для Каждого ТекЭлем Из пГруппа.ПодчиненныеЭлементы Цикл //Рекурсивный обход подчинённых
		
		лРезультат = лРезультат + ПроверкаТипаПрограммногоСоздания(ТекЭлем, пНастройкиПараметры);
		
	КонецЦикла;
	
	//лРезультат = лСгенерированныйКод;
	Возврат лРезультат;
	
КонецФункции

&НаСервере
Функция СоздатьПрограммноКнопку(пЭлемент, пНастройкиПараметры)
	
	лРезультат = "";
	лСгенерированныйКод = "";
	
	лЭтаФормаКоманды 	= ЭтаФорма.Команды;
	
	лКпопкаКоманда 	= лЭтаФормаКоманды.Найти(пЭлемент.ИмяКоманды);
	
	Если лКпопкаКоманда <> Неопределено Тогда
		//Команда
		лКпопкаКомандаИмя 		= лКпопкаКоманда.Имя;
		лКпопкаКомандаЗаголовок = лКпопкаКоманда.Заголовок;
		лКпопкаКомандаДействие 	= лКпопкаКоманда.Действие;
		
		//Элемент
		лКпопкаЭлементИмя 		= пЭлемент.Имя;
		лКпопкаЭлементЗаголовок = пЭлемент.Заголовок;
		
		лКовычка = """"; 
		
		лПрограммныйКодИмяРеквизита = лКовычка + пНастройкиПараметры.ПрефиксИмёнРеквизитов + лКпопкаКомандаИмя + пНастройкиПараметры.ПостфиксИмёнРеквизитов + лКовычка;
		лПрограммныйКодИмяЭлемента 	= лКовычка + пНастройкиПараметры.ПрефиксИмёнЭлементов + лКпопкаЭлементИмя + пНастройкиПараметры.ПостфиксИмёнЭлементов + лКовычка;
		лПрограммныйКодЗаголовокКоманды = лКовычка + ?(пНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка, СтрЗаменить(лКпопкаКомандаЗаголовок, пНастройкиПараметры.УчитыватьТолькоТестЗаголовка, ""), лКпопкаКомандаЗаголовок) + лКовычка;
		
		лПрограммныйКод = "
		|//Команда " + лПрограммныйКодИмяРеквизита + " и кнопка " + лПрограммныйКодИмяЭлемента + "
		|лКоманды 		= ЭтаФорма.Команды;
		|лИмяКоманды 	= " + лПрограммныйКодИмяРеквизита + ";
		|Если лКоманды.Найти(лИмяКоманды) = Неопределено Тогда
		|	лКомандаФормы 			= лКоманды.Добавить(лИмяКоманды);
		|	лКомандаФормы.Действие 	= " + лКовычка + лКпопкаКоманда.Действие + лКовычка + ";
		|	лКомандаФормы.Заголовок 	= " + лПрограммныйКодЗаголовокКоманды + ";
		|	лКомандаФормы.Отображение 	= ОтображениеКнопки." + ПолучитьИмяСвойства(Строка(лКпопкаКоманда.Отображение)) + ";
		|	лКомандаФормы.ИзменяетСохраняемыеДанные = " + Формат(лКпопкаКоманда.ИзменяетСохраняемыеДанные, "БЛ=Ложь; БИ=Истина") + ";
		|КонецЕсли;
		|
		|лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить(" + лПрограммныйКодИмяЭлемента + ", Тип("+ лКовычка + "КнопкаФормы" + лКовычка + "), " + "Элементы." + пЭлемент.Родитель.Имя + ");
		|лНовыйЭлемент.Вид 		= ВидКнопкиФормы." + ПолучитьИмяСвойства(Строка(пЭлемент.Вид)) + ";
		|лНовыйЭлемент.Заголовок	= " + лКовычка + ?(пНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка, СтрЗаменить(лКпопкаЭлементЗаголовок, пНастройкиПараметры.УчитыватьТолькоТестЗаголовка, ""), лКпопкаЭлементЗаголовок) + лКовычка + ";
		|лНовыйЭлемент.ИмяКоманды 	= лИмяКоманды;
		|";
		
		СгенерированныйКод 	= Строка(СгенерированныйКод) + лПрограммныйКод;
		лСгенерированныйКод = лСгенерированныйКод + лПрограммныйКод;
	КонецЕсли; 
	
	лРезультат = лСгенерированныйКод;
	Возврат лРезультат;
	
КонецФункции // СоздатьКнопку()

&НаСервере
Функция ПолучитьИмяСвойства(пИмя)
	
	лРезультат = СтрЗаменить(пИмя, " ", "");
	
	Возврат лРезультат;
	
КонецФункции // ПолучитьИмяСвойства()


//--- ====== Выполнить автономную команду (можно добавить при создании любой другой формы) ================================================

#КонецОбласти // АвтономнаяКоманда 

//+++ ====== Методы текущей формы ================================================

&НаКлиенте
Процедура Команда1Выполнить(Команда)
	Сообщить("Тест");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СозатьПрограммноФорму();
	
КонецПроцедуры

&НаСервере
Функция СозатьПрограммноФорму(пНастройкиИзРеквизитовФормы = Истина)
	
	лРезультат = Неопределено;
	
	лЭтаФормаКоманды 	= ЭтаФорма.Команды;
	лЭлементыГруппаРисованияПодчиненныеЭлементы 	= Элементы.ГруппаРисования.ПодчиненныеЭлементы;
	Для каждого лЭлемент Из лЭлементыГруппаРисованияПодчиненныеЭлементы Цикл
		
		лЭлементИмя 		= лЭлемент.Имя;
		лЭлементЗаголовок 	= лЭлемент.Заголовок;
		
		лНастройкиПараметры = ПолучитьСтруктуруНастроекПараметров();
		
		Если НЕ пНастройкиИзРеквизитовФормы Тогда 
			//лНастройкиПараметры.УчитыватьТолькоТестЗаголовка 	= УчитыватьТолькоТестЗаголовка;
			//лНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка 	= ЗатиратьЗаданныйТекстЗаголовка;
			//лНастройкиПараметры.ПрефиксИмёнРеквизитов 	= ПрефиксИмёнРеквизитов;
			//лНастройкиПараметры.ПостфиксИмёнРеквизитов 	= ПостфиксИмёнРеквизитов;
			//лНастройкиПараметры.ПрефиксИмёнЭлементов 	= ПрефиксИмёнЭлементов;
			//лНастройкиПараметры.ПостфиксИмёнЭлементов 	= ПостфиксИмёнЭлементов;
		Иначе //Берём из реквизитов конкретно этой формы
			лНастройкиПараметры.УчитыватьТолькоТестЗаголовка 	= УчитыватьТолькоТестЗаголовка;
			лНастройкиПараметры.ЗатиратьЗаданныйТекстЗаголовка 	= ЗатиратьЗаданныйТекстЗаголовка;
			лНастройкиПараметры.ПрефиксИмёнРеквизитов 	= ПрефиксИмёнРеквизитов;
			лНастройкиПараметры.ПостфиксИмёнРеквизитов 	= ПостфиксИмёнРеквизитов;
			лНастройкиПараметры.ПрефиксИмёнЭлементов 	= ПрефиксИмёнЭлементов;
			лНастройкиПараметры.ПостфиксИмёнЭлементов 	= ПостфиксИмёнЭлементов;
		КонецЕсли;
		
		ПроверкаТипаПрограммногоСоздания(лЭлемент, лНастройкиПараметры);
		
		//ЭлементыЭлем
		
	КонецЦикла;
	
	Возврат лРезультат;
	
КонецФункции // СозатьПрограммноФорму()


&НаСервере
Функция ПолучитьЗаголовокКоманды(пИмяКоманды)
	
	лРезультат = Неопределено;
	
	Возврат лРезультат;
	
КонецФункции // ПолучитьЗаголовокКоманды()

&НаКлиенте
Процедура ТестРеквПриИзменении(Элемент)
	Сообщить("ТестРеквПриИзменении");
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяКоманды 				= "ПрограммныйКодОткрытойФормы";
	КомандаФормы 			= ЭтаФорма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Действие 	= "ВыполнитьАвтономнуюКоманду";
	КомандаФормы.Заголовок 	= "Программный код открытой формы";
	КомандаФормы.Отображение 	= ОтображениеКнопки.КартинкаИТекст;
	КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	
	НовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ПрограммныйКодОткрытойФормы", Тип("КнопкаФормы"), КоманднаяПанель);
	//НовыйЭлемент.Вид 		= ВидКнопкиФормы.Гиперссылка;
	НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	
	//2
	
	////////////////////////////////////////////////////////////////////////////////
	//Страницы "ГруппаСтраницы1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаСтраницы1", Тип("ГруппаФормы"));
	лГруппа.Вид		= ВидГруппыФормы.Страницы;
	лГруппа.Заголовок	= "Страницы";
	
	//Страница "ГруппаРисования1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаРисования1", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы1);
	лГруппа.Вид		= ВидГруппыФормы.Страница;
	лГруппа.Заголовок	= "Рисование элементов";
	
	//Декорация "Декорация2"
	лДекорация			= ЭтаФорма.Элементы.Добавить("Декорация3", Тип("ДекорацияФормы"), Элементы.ГруппаРисования1);
	лДекорация.Вид		= ВидДекорацииФормы.Надпись;
	лДекорация.Заголовок	= "Все элементы с этой закладки будут программно сгенерированы";
	
	//Реквизит "ТестРекв" и ПолеФормы "ТестРекв1"
	//Ищем реквизит "ТестРекв". Если не находим - добавляем новый, иначе берём существующий
	лРеквизитыФормы 	= ПолучитьРеквизиты();
	лИмяРеквизита 		= "ТестРекв";
	лЕстьРеквизит 		= Ложь;
	Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
		
		лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
		Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			лЕстьРеквизит 	= Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ лЕстьРеквизит Тогда
		МассивРеквизитовФормы 	= Новый Массив;
		НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов("Строка"), "", "Тест рекв");
		МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовФормы);	
	КонецЕсли; 
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ТестРекв1", Тип("ПолеФормы"), Элементы.ГруппаРисования1);
	лНовыйЭлемент.Вид 		= ВидПоляФормы.Полеввода;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ПутьКДанным 	= лИмяРеквизита;
	лНовыйЭлемент.УстановитьДействие("ПриИзменении","ТестРекв1ПриИзменении");
	
	//Группа "ГруппаТест1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаТест1", Тип("ГруппаФормы"), Элементы.ГруппаРисования1);
	лГруппа.Вид		= ВидГруппыФормы.Обычнаягруппа;
	лГруппа.Заголовок	= "Группа тест";
	лГруппа.ОтображатьЗаголовок 	= Истина;
	
	//Реквизит "ТестБул" и ПолеФормы "ТестБул1"
	//Ищем реквизит "ТестБул". Если не находим - добавляем новый, иначе берём существующий
	лРеквизитыФормы 	= ПолучитьРеквизиты();
	лИмяРеквизита 		= "ТестБул";
	лЕстьРеквизит 		= Ложь;
	Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
		
		лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
		Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			лЕстьРеквизит 	= Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ лЕстьРеквизит Тогда
		МассивРеквизитовФормы 	= Новый Массив;
		НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов("Булево"), "", "Тест бул");
		МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовФормы);	
	КонецЕсли; 
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ТестБул1", Тип("ПолеФормы"), Элементы.ГруппаТест1);
	лНовыйЭлемент.Вид 		= ВидПоляФормы.Полефлажка;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ПутьКДанным 	= лИмяРеквизита;
	лНовыйЭлемент.УстановитьДействие("ПриИзменении","ТестБул1ПриИзменении");
	
	//Группа "ГруппаТестВложенной1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаТестВложенной1", Тип("ГруппаФормы"), Элементы.ГруппаТест1);
	лГруппа.Вид		= ВидГруппыФормы.Обычнаягруппа;
	лГруппа.Заголовок	= "Группа тест вложенной";
	лГруппа.ОтображатьЗаголовок 	= Истина;
	
	//Команда "ИмяКоманда1" и кнопка "Команда2"
	лКоманды 		= ЭтаФорма.Команды;
	лИмяКоманды 	= "ИмяКоманда1";
	Если лКоманды.Найти(лИмяКоманды) = Неопределено Тогда
		лКомандаФормы 			= лКоманды.Добавить(лИмяКоманды);
		лКомандаФормы.Действие 	= "Команда1Выполнить";
		лКомандаФормы.Заголовок 	= "Имя команда1 заголовок";
		лКомандаФормы.Отображение 	= ОтображениеКнопки.Авто;
		лКомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	КонецЕсли;
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("Команда2", Тип("КнопкаФормы"), Элементы.ГруппаТестВложенной1);
	лНовыйЭлемент.Вид 		= ВидКнопкиФормы.Обычнаякнопка;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ИмяКоманды 	= лИмяКоманды;
	
	//Страница "ГруппаНастройки1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаНастройки1", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы1);
	лГруппа.Вид		= ВидГруппыФормы.Страница;
	лГруппа.Заголовок	= "Настройки";
	
	//Группа "ГруппаВыполнитьКоманды1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаВыполнитьКоманды1", Тип("ГруппаФормы"), Элементы.ГруппаНастройки1);
	лГруппа.Вид		= ВидГруппыФормы.Обычнаягруппа;
	лГруппа.Заголовок	= "Выполнить команды";
	лГруппа.ОтображатьЗаголовок 	= Истина;
	
	//Команда "ВыполнитьКомандуМодуля" и кнопка "ВыполнитьКоманду1"
	лКоманды 		= ЭтаФорма.Команды;
	лИмяКоманды 	= "ВыполнитьКомандуМодуля";
	Если лКоманды.Найти(лИмяКоманды) = Неопределено Тогда
		лКомандаФормы 			= лКоманды.Добавить(лИмяКоманды);
		лКомандаФормы.Действие 	= "ВыполнитьКоманду";
		лКомандаФормы.Заголовок 	= "Выполнить команду модуля";
		лКомандаФормы.Отображение 	= ОтображениеКнопки.Картинкаитекст;
		лКомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	КонецЕсли;
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ВыполнитьКоманду1", Тип("КнопкаФормы"), Элементы.ГруппаВыполнитьКоманды1);
	лНовыйЭлемент.Вид 		= ВидКнопкиФормы.Обычнаякнопка;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ИмяКоманды 	= лИмяКоманды;
	
	//Команда "ВыполнитьАвтономнуюКоманду" и кнопка "ВыполнитьАвтономнуюКоманду1"
	лКоманды 		= ЭтаФорма.Команды;
	лИмяКоманды 	= "ВыполнитьАвтономнуюКоманду";
	Если лКоманды.Найти(лИмяКоманды) = Неопределено Тогда
		лКомандаФормы 			= лКоманды.Добавить(лИмяКоманды);
		лКомандаФормы.Действие 	= "ВыполнитьАвтономнуюКоманду";
		лКомандаФормы.Заголовок 	= "Выполнить автономную команду";
		лКомандаФормы.Отображение 	= ОтображениеКнопки.Картинкаитекст;
		лКомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	КонецЕсли;
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ВыполнитьАвтономнуюКоманду1", Тип("КнопкаФормы"), Элементы.ГруппаВыполнитьКоманды1);
	лНовыйЭлемент.Вид 		= ВидКнопкиФормы.Обычнаякнопка;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ИмяКоманды 	= лИмяКоманды;
	
	//Группа "ГруппаЗаголовок1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаЗаголовок1", Тип("ГруппаФормы"), Элементы.ГруппаНастройки1);
	лГруппа.Вид		= ВидГруппыФормы.Обычнаягруппа;
	лГруппа.Заголовок	= "Учитывать заголовок";
	лГруппа.ОтображатьЗаголовок 	= Истина;
	
	//Реквизит "УчитыватьТолькоТестЗаголовка" и ПолеФормы "УчитыватьТолькоТестЗаголовка1"
	//Ищем реквизит "УчитыватьТолькоТестЗаголовка". Если не находим - добавляем новый, иначе берём существующий
	лРеквизитыФормы 	= ПолучитьРеквизиты();
	лИмяРеквизита 		= "УчитыватьТолькоТестЗаголовка";
	лЕстьРеквизит 		= Ложь;
	Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
		
		лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
		Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			лЕстьРеквизит 	= Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ лЕстьРеквизит Тогда
		МассивРеквизитовФормы 	= Новый Массив;
		НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов("Строка"), "", "Учитывать только тест заголовка");
		МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовФормы);	
	КонецЕсли; 
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("УчитыватьТолькоТестЗаголовка1", Тип("ПолеФормы"), Элементы.ГруппаЗаголовок1);
	лНовыйЭлемент.Вид 		= ВидПоляФормы.Полеввода;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ПутьКДанным 	= лИмяРеквизита;
	лНовыйЭлемент.УстановитьДействие("ПриИзменении","УчитыватьТолькоТестЗаголовка1ПриИзменении");
	
	//Реквизит "ЗатиратьЗаданныйТекстЗаголовка" и ПолеФормы "ЗатиратьЗданныйТекстЗаголовка1"
	//Ищем реквизит "ЗатиратьЗаданныйТекстЗаголовка". Если не находим - добавляем новый, иначе берём существующий
	лРеквизитыФормы 	= ПолучитьРеквизиты();
	лИмяРеквизита 		= "ЗатиратьЗаданныйТекстЗаголовка";
	лЕстьРеквизит 		= Ложь;
	Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
		
		лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
		Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			лЕстьРеквизит 	= Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ лЕстьРеквизит Тогда
		МассивРеквизитовФормы 	= Новый Массив;
		НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов("Булево"), "", "Затирать заданный текст заголовка");
		МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовФормы);	
	КонецЕсли; 
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ЗатиратьЗданныйТекстЗаголовка1", Тип("ПолеФормы"), Элементы.ГруппаЗаголовок1);
	лНовыйЭлемент.Вид 		= ВидПоляФормы.Полефлажка;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ПутьКДанным 	= лИмяРеквизита;
	лНовыйЭлемент.УстановитьДействие("ПриИзменении","ЗатиратьЗданныйТекстЗаголовка1ПриИзменении");
	
	//Группа "ГруппаДописывать1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаДописывать1", Тип("ГруппаФормы"), Элементы.ГруппаНастройки1);
	лГруппа.Вид		= ВидГруппыФормы.Обычнаягруппа;
	лГруппа.Заголовок	= "Дописывать в названия";
	лГруппа.ОтображатьЗаголовок 	= Истина;
	
	//Группа "ГруппаРеквизит1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаРеквизит1", Тип("ГруппаФормы"), Элементы.ГруппаДописывать1);
	лГруппа.Вид		= ВидГруппыФормы.Обычнаягруппа;
	лГруппа.Заголовок	= "В реквизит";
	лГруппа.ОтображатьЗаголовок 	= Истина;
	
	//Реквизит "ПрефиксИмёнРеквизитов" и ПолеФормы "ПрефиксИмёнРеквизитов1"
	//Ищем реквизит "ПрефиксИмёнРеквизитов". Если не находим - добавляем новый, иначе берём существующий
	лРеквизитыФормы 	= ПолучитьРеквизиты();
	лИмяРеквизита 		= "ПрефиксИмёнРеквизитов";
	лЕстьРеквизит 		= Ложь;
	Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
		
		лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
		Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			лЕстьРеквизит 	= Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ лЕстьРеквизит Тогда
		МассивРеквизитовФормы 	= Новый Массив;
		НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов("Строка"), "", "Префикс имён реквизитов");
		МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовФормы);	
	КонецЕсли; 
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ПрефиксИмёнРеквизитов1", Тип("ПолеФормы"), Элементы.ГруппаРеквизит1);
	лНовыйЭлемент.Вид 		= ВидПоляФормы.Полеввода;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ПутьКДанным 	= лИмяРеквизита;
	лНовыйЭлемент.УстановитьДействие("ПриИзменении","ПрефиксИмёнРеквизитов1ПриИзменении");
	
	//Реквизит "ПостфиксИмёнРеквизитов" и ПолеФормы "ПостфиксИмёнРеквизитов1"
	//Ищем реквизит "ПостфиксИмёнРеквизитов". Если не находим - добавляем новый, иначе берём существующий
	лРеквизитыФормы 	= ПолучитьРеквизиты();
	лИмяРеквизита 		= "ПостфиксИмёнРеквизитов";
	лЕстьРеквизит 		= Ложь;
	Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
		
		лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
		Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			лЕстьРеквизит 	= Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ лЕстьРеквизит Тогда
		МассивРеквизитовФормы 	= Новый Массив;
		НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов("Строка"), "", "Постфикс имён реквизитов");
		МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовФормы);	
	КонецЕсли; 
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ПостфиксИмёнРеквизитов1", Тип("ПолеФормы"), Элементы.ГруппаРеквизит1);
	лНовыйЭлемент.Вид 		= ВидПоляФормы.Полеввода;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ПутьКДанным 	= лИмяРеквизита;
	лНовыйЭлемент.УстановитьДействие("ПриИзменении","ПостфиксИмёнРеквизитов1ПриИзменении");
	
	//Группа "ГруппаЭлемент1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаЭлемент1", Тип("ГруппаФормы"), Элементы.ГруппаДописывать1);
	лГруппа.Вид		= ВидГруппыФормы.Обычнаягруппа;
	лГруппа.Заголовок	= "В элемент";
	лГруппа.ОтображатьЗаголовок 	= Истина;
	
	//Реквизит "ПрефиксИмёнЭлементов" и ПолеФормы "ПрефиксИмёнЭлементов1"
	//Ищем реквизит "ПрефиксИмёнЭлементов". Если не находим - добавляем новый, иначе берём существующий
	лРеквизитыФормы 	= ПолучитьРеквизиты();
	лИмяРеквизита 		= "ПрефиксИмёнЭлементов";
	лЕстьРеквизит 		= Ложь;
	Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
		
		лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
		Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			лЕстьРеквизит 	= Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ лЕстьРеквизит Тогда
		МассивРеквизитовФормы 	= Новый Массив;
		НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов("Строка"), "", "Префикс имён элементов");
		МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовФормы);	
	КонецЕсли; 
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ПрефиксИмёнЭлементов1", Тип("ПолеФормы"), Элементы.ГруппаЭлемент1);
	лНовыйЭлемент.Вид 		= ВидПоляФормы.Полеввода;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ПутьКДанным 	= лИмяРеквизита;
	лНовыйЭлемент.УстановитьДействие("ПриИзменении","ПрефиксИмёнЭлементов1ПриИзменении");
	
	//Реквизит "ПостфиксИмёнЭлементов" и ПолеФормы "ПостфиксИмёнЭлементов1"
	//Ищем реквизит "ПостфиксИмёнЭлементов". Если не находим - добавляем новый, иначе берём существующий
	лРеквизитыФормы 	= ПолучитьРеквизиты();
	лИмяРеквизита 		= "ПостфиксИмёнЭлементов";
	лЕстьРеквизит 		= Ложь;
	Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
		
		лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
		Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			лЕстьРеквизит 	= Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ лЕстьРеквизит Тогда
		МассивРеквизитовФормы 	= Новый Массив;
		НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов("Строка"), "", "Постфикс имён элементов");
		МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовФормы);	
	КонецЕсли; 
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("ПостфиксИмёнЭлементов1", Тип("ПолеФормы"), Элементы.ГруппаЭлемент1);
	лНовыйЭлемент.Вид 		= ВидПоляФормы.Полеввода;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ПутьКДанным 	= лИмяРеквизита;
	лНовыйЭлемент.УстановитьДействие("ПриИзменении","ПостфиксИмёнЭлементов1ПриИзменении");
	
	//Страница "ГруппаКода1"
	лГруппа			= ЭтаФорма.Элементы.Добавить("ГруппаКода1", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы1);
	лГруппа.Вид		= ВидГруппыФормы.Страница;
	лГруппа.Заголовок	= "Программный код";
	
	//Реквизит "СгенерированныйКод" и ПолеФормы "СгенерированныйКод1"
	//Ищем реквизит "СгенерированныйКод". Если не находим - добавляем новый, иначе берём существующий
	лРеквизитыФормы 	= ПолучитьРеквизиты();
	лИмяРеквизита 		= "СгенерированныйКод";
	лЕстьРеквизит 		= Ложь;
	Для каждого лРеквизитыФормыЭлем Из лРеквизитыФормы Цикл
		
		лРеквизитФормыЭлемИмя 	= лРеквизитыФормыЭлем.Имя;
		Если лРеквизитФормыЭлемИмя = лИмяРеквизита Тогда
			лЕстьРеквизит 	= Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если НЕ лЕстьРеквизит Тогда
		МассивРеквизитовФормы 	= Новый Массив;
		НовыйРеквизитФормы 		= Новый РеквизитФормы(лИмяРеквизита, Новый ОписаниеТипов("Строка"), "", "Сгенерированный код");
		МассивРеквизитовФормы.Добавить(НовыйРеквизитФормы);
		
		ИзменитьРеквизиты(МассивРеквизитовФормы);	
	КонецЕсли; 
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("СгенерированныйКод1", Тип("ПолеФормы"), Элементы.ГруппаКода1);
	лНовыйЭлемент.Вид 		= ВидПоляФормы.Полеввода;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ПутьКДанным 	= лИмяРеквизита;
	лНовыйЭлемент.УстановитьДействие("ПриИзменении","СгенерированныйКод1ПриИзменении");
	
	//Команда "Обновить" и кнопка "Обновить1"
	лКоманды 		= ЭтаФорма.Команды;
	лИмяКоманды 	= "Обновить";
	Если лКоманды.Найти(лИмяКоманды) = Неопределено Тогда
		лКомандаФормы 			= лКоманды.Добавить(лИмяКоманды);
		лКомандаФормы.Действие 	= "Обновить";
		лКомандаФормы.Заголовок 	= "Обновить";
		лКомандаФормы.Отображение 	= ОтображениеКнопки.Картинкаитекст;
		лКомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	КонецЕсли;
	
	лНовыйЭлемент 			= ЭтаФорма.Элементы.Добавить("Обновить1", Тип("КнопкаФормы"), Элементы.ГруппаКода1);
	лНовыйЭлемент.Вид 		= ВидКнопкиФормы.Обычнаякнопка;
	лНовыйЭлемент.Заголовок	= "";
	лНовыйЭлемент.ИмяКоманды 	= лИмяКоманды;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	СгенерированныйКод = "";
	СозатьПрограммноФорму();
	
КонецПроцедуры

//--- ====== Методы текущей формы ================================================ 


